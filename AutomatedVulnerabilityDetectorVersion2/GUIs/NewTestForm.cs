using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.OleDb;
using System.Text.RegularExpressions;
using AutomatedVulnerabilityDetectorVersion2.Classes.DB;

namespace AutomatedVulnerabilityDetectorVersion2.GUIs
{
    public partial class NewTestForm : Form
    {
        public NewTestForm()
        {
            InitializeComponent();
        }

        private void cancelButton_Click(object sender, EventArgs e)
        {
            try
            {
                SharedVariables.myMainForm.Show();
                this.Hide();
                this.Close();
                this.Dispose();
            }
            catch (NullReferenceException)
            {
                SharedVariables.myMainForm = new mainForm();
                SharedVariables.myMainForm.Show();
            }
            
        }

        private void okButton_Click(object sender, EventArgs e)
        {
            if (testNameTextBox.Text == string.Empty || testNameTextBox.Text == "")
            {
                MessageBox.Show("Please fill in test name field", "Error !", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                testNameTextBox.Focus();
                return;
            }

            try
            {
                using (OleDbConnection con = new OleDbConnection(SharedVariables.myConnectionString))
                {
                    con.Open();
                    using (OleDbCommand cmd = new OleDbCommand("SELECT COUNT(*) FROM [profile] WHERE [profileName]=?", con))
                    {
                        cmd.Parameters.AddWithValue("?", testNameTextBox.Text);
                        if ((int)cmd.ExecuteScalar() > 0)
                        {
                            MessageBox.Show("This test name is already used ,please try another test name", "Error !", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                            return;
                        }
                    }
                }
            }
            catch (Exception) { }


            if (!xssCheckBox.Checked &&
               !sqlInjectionCheckBox.Checked &&
               !rfiCheckBox.Checked)
            {
                MessageBox.Show("You have to choose at least one type of tests.", "Error !", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                return;
            }
            if (targetURLTextBox.Text == string.Empty || targetURLTextBox.Text == "")
            {
                MessageBox.Show("Please fill in target URL field", "Error !", MessageBoxButtons.OK, MessageBoxIcon.Exclamation);
                targetURLTextBox.Focus();
                return;
            }


            string targerSite = targetURLTextBox.Text;
            Regex r = new Regex("http(s)?://([\\w-]+\\.)+[\\w-]+(/[\\w- ./?%&=]*)?");
            if (!r.IsMatch(targerSite.ToLower()))
            {
                MessageBox.Show("Invalid URL!, have you forgotten the \"http://\"?", "Error !", MessageBoxButtons.OK, MessageBoxIcon.Error);
                targetURLTextBox.Focus();
                return;
            }


            int testId;
            using (OleDbConnection con = new OleDbConnection(SharedVariables.myConnectionString))
            {
                con.Open();
                using (OleDbCommand cmd = new OleDbCommand("SELECT COUNT(*) FROM [profile]", con))
                {
                    testId = (int)cmd.ExecuteScalar();
                    testId++;
                }
            }

            ProfilesManager p = new ProfilesManager();
            if (!p.addProfile(testNameTextBox.Text,xssCheckBox.Checked,sqlInjectionCheckBox.Checked,rfiCheckBox.Checked,deepScanCheckBox.Checked))
            {
                MessageBox.Show("Unknown error : fails to create new test.", "Error !", MessageBoxButtons.OK, MessageBoxIcon.Error);
                return;
            }
            else
            {
                PagesManager pp = new PagesManager();
                if (!pp.addPage(targetURLTextBox.Text, testId.ToString(), "NULL"))
                {
                    MessageBox.Show("faild to create the test profile", "Error !", MessageBoxButtons.OK, MessageBoxIcon.Error);
                    return;
                }
                SharedVariables.myTestingForm = new TestingForm(testId, true);
                this.Hide();
                SharedVariables.myTestingForm.Show();
                this.Close();
                this.Dispose();
            }
        }
    }
}
