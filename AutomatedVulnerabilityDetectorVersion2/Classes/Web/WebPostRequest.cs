/*
 * HTTP Web Post Request Class
 * the main purpose of this class is to send a http post request
 * 
 *       Mukhtar Sayed Saleh
 *       Syria- Al_Boukamal
 *       mokhtar_ss@hotmail.com
 *       00963944467547   
 *       
 *   start date : Albokamal 9-9-2010
 *   finish date : Damascus 3-10-2010
 *   testing start date : Albokamal 9-9-2010
 *   testing finish date : Damascus 3-10-2010 
 *   
 *   two links comparing method has been added on : 19-12-2010
 *   final test : 19-12-2010 // ok
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Net;
using System.IO;
using AutomatedVulnerabilityDetectorVersion2.GUIs;

namespace AutomatedVulnerabilityDetectorVersion2.Classes.Web
{
    class WebPostRequest
    {
        WebRequest theRequest;
        HttpWebResponse theResponse;
        string parameters = string.Empty;

        public WebPostRequest(string url)
        {
            theRequest = WebRequest.Create(url);
            theRequest.Method = "POST";
        }

        public void AddParamsToHeader(string parameters)
        {
            this.parameters = parameters;
        }

        public string GetResponse()
        {
            try
            {
                // Set the encoding type
                theRequest.ContentType = "application/x-www-form-urlencoded";

                // Build a string containing all the parameters
                string Parameters = this.parameters;
                theRequest.ContentLength = Parameters.Length;

                // We write the parameters into the request
                StreamWriter sw = new StreamWriter(theRequest.GetRequestStream());
                sw.Write(Parameters);
                sw.Close();

                // Execute the query
                theResponse = (HttpWebResponse)theRequest.GetResponse();
                StreamReader sr = new StreamReader(theResponse.GetResponseStream());
                return sr.ReadToEnd();
            }
            catch (WebException ex)
            {
                displayOutput("error : " + ex.Message + "\n");
            }
            return string.Empty;
        }

        private static void displayOutput(string msg)
        {
            SharedVariables.myTestingForm.displayOutputActivity(msg);
        }
    }
}
