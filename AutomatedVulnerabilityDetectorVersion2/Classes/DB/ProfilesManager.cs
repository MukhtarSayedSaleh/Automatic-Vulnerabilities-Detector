/*
 * test profile's manager Class
 * the main purpose of this class is to 
 * add,delete,update, and manage test profiles
 * in the database.
 * 
 *       Mukhtar Sayed Saleh
 *       Syria- Al_Boukamal
 *       mokhtar_ss@hotmail.com
 *       00963944467547   
 * 
 *   start date : 3-9-2010
 *   finish date : 4-9-2010
 *   testing start date : 3-9-2010
 *   testing finish date : 9-10-2010 // OK
 *   
 * !!!Converted from SQL Server to Access on 18-12-2010 for the speed
 *   and portability issues!!!
 *  
 *  final test : 19-12-2010 // OK 100%
 */

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Configuration;
using System.Data.OleDb;

namespace AutomatedVulnerabilityDetectorVersion2.Classes.DB
{
    class ProfilesManager : SharedDbVariables
    {
        private string myConnectionString = AVD2ConnectionString;
            
        /// <summary>
        /// add new profile with auto-generated id
        /// </summary>
        public bool addProfile(string name,bool xssTest,bool SQLInjectionTest,bool rfiTest,bool deepScan)
        {
            try
            {
                using (OleDbConnection con = new OleDbConnection(this.myConnectionString))
                {
                    con.Open();
                    using (OleDbCommand cmd = new OleDbCommand("INSERT INTO `profile` (`profileName`, `xssTest`, `sqlInjectionTest`, `rfiTest`, `deepScan`) VALUES (?, ?, ?, ?, ?)", con))
                    {
                        cmd.Parameters.AddWithValue("profileName", name);
                        cmd.Parameters.AddWithValue("xssTest", xssTest);
                        cmd.Parameters.AddWithValue("sqlInjectionTest", SQLInjectionTest);
                        cmd.Parameters.AddWithValue("rfiTest", rfiTest);
                        cmd.Parameters.AddWithValue("deepScan", deepScan);
                        cmd.ExecuteNonQuery();
                        return true;
                    }
                }
            }
            catch (Exception)
            {
                return false;
            }
        }

        /// <summary>
        /// add new profile with specific id
        /// </summary>
        public bool addProfile(int profileID, string name, bool xssTest, bool SQLInjectionTest, bool rfiTest,bool deepScan)
        {
            try
            {
                using (OleDbConnection con = new OleDbConnection(this.myConnectionString))
                {
                    con.Open();
                    using (OleDbCommand cmd = new OleDbCommand("INSERT INTO `profile` (`profileID`, `profileName`, `xssTest`, `sqlInjectionTest`, `rfiTest` , `deepScan`) VALUES (?, ?, ?, ?, ?, ?)", con))
                    {
                        cmd.Parameters.AddWithValue("profileID", profileID.ToString());
                        cmd.Parameters.AddWithValue("profileName", name);
                        cmd.Parameters.AddWithValue("xssTest", xssTest);
                        cmd.Parameters.AddWithValue("sqlInjectionTest", SQLInjectionTest);
                        cmd.Parameters.AddWithValue("rfiTest", rfiTest);
                        cmd.Parameters.AddWithValue("deepScan", deepScan);
                        cmd.ExecuteNonQuery();
                        return true;
                    }
                }
            }
            catch (Exception)
            {
                return false;
            }
        }

        /// <summary>
        /// edit profile with the ID : profileID
        /// </summary>
        public bool editProfile(string newName, bool newXSSTest, bool newSQLInjectionTest, bool newrfiTest,bool newDeepScan,string profileID)
        {
            try
            {
                using (OleDbConnection con = new OleDbConnection(this.myConnectionString))
                {
                    con.Open();
                    using (OleDbCommand cmd = new OleDbCommand("UPDATE `profile` SET `profileName` = ?, `xssTest` = ?, `sqlInjectionTest` = ?, `rfiTest` = ?, `deepScan` = ?  WHERE `profileID` = ?", con))
                    {
                        cmd.Parameters.AddWithValue("profileName", newName);
                        cmd.Parameters.AddWithValue("xssTest", newXSSTest);
                        cmd.Parameters.AddWithValue("sqlInjectionTest", newSQLInjectionTest);
                        cmd.Parameters.AddWithValue("rfiTest", newrfiTest);
                        cmd.Parameters.AddWithValue("deepScan", newDeepScan);
                        cmd.Parameters.AddWithValue("profileID", profileID);
                        cmd.ExecuteNonQuery();
                        return true;
                    }
                }
            }
            catch (Exception)
            {
                return false;
            }
        }

        /// <summary>
        /// delete profile with the ID : profileID
        /// </summary>
        public bool deleteProfile(string profileID)
        {
            try
            {
                using (OleDbConnection con = new OleDbConnection(this.myConnectionString))
                {
                    con.Open();
                    using (OleDbCommand cmd = new OleDbCommand("DELETE FROM `profile` WHERE `profileID` = ?", con))
                    {
                        cmd.Parameters.AddWithValue("profileID", profileID);
                        cmd.ExecuteNonQuery();
                        return true;
                    }
                }
            }
            catch (Exception)
            {
                return false;
            }
        }        

    }
}
